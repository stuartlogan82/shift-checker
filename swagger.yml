swagger: "2.0"
info:
  description: Basic shift API
  version: "1.0.0"
  title: Basic Shift Checking and Updating API

consumes:
  - "application/x-www-form-urlencoded"
produces:
  - "application/json"

basePath: "/api"

# Paths supported by server application
paths:
  /shifts:
    get:
      operationId: "shifts.read"
      tags:
        - "Shifts"
      summary: "All the shifts for the week"
      description: "Read all of the shifts"
      responses:
        200:
          description: "Successfully read shift"
          schema:
            type: object
            items:
              properties:
                day:
                  type: object
                  items:
                    properties:
                      time:
                        type: object
                        items:
                          properties:
                            assignee:
                              type: string
                            timestamp:
                              type: string
  /free_shifts:
    get:
      operationId: "shifts.unassigned_shifts"
      tags:
        - "Shifts"
      summary: "All the shifts for the week with no one assigned"
      description: "Read all of the shifts for the week that are not assigned"
      responses:
        200:
          description: "Successfully found shifts"
          schema:
            type: "array"
            items:
              properties:
                day:
                  type: string
                time:
                  type: string
        401:
          $ref: "#/responses/UnauthorizedError"
  /shift/{weekday}/{time}:
    post:
      operationId: "shifts.update"
      tags:
        - "Shifts"
      summary: "Update a shift"
      description: "Update a shift with assignee"
      parameters:
        - name: weekday
          in: path
          description: Day of the week to update
          type: string
          required: True
        - name: time
          in: path
          description: AM or PM shift
          type: string
          required: True
        - name: assignee
          in: query
          type: string
      responses:
        204:
          description: Successfully updated shift
        401:
          $ref: "#/responses/UnauthorizedError"
        404:
          description: Shift not found
          schema:
            type: string
  /reset_shifts:
    get:
      operationId: "shifts.reset_shifts"
      tags:
        - "Shifts"
      summary: "Generate a random roster"
      description: "Generate a random roster with some shifts not assigned"
      responses:
        201:
          description: "Successfully randomized shifts"
          schema:
            type: string
#securityDefinitions:
# Twilio uses challenge/response and needs a Realm to authenticate. Implemented Flask HTTPAuth to handle basic auth
responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid
    headers:
      WWW-Authenticate:
        type: string
